from nose.tools import *
from spotad.parameters import _from_stream

PARAMS_DUMMY_CONTENT = """
From_Date=20170501
To_Date=20170607
Exchange="'Rubicon'"
Campaign="'100000006','100000007','100000010','100000012','100000017','100000018','100000019','100000020','100000027','100000028','100000029','100000042','100000054','100000056','100000062','100000063','100000075','100000076','100000077','100000079','100000080','100000081','100000083','100000105','100000106','100000117','100000118','100000119','100000120','100000121','100000122','100000125','100000126','100000127','100000128','100000129','100000134','100000136','100000137','100000138','100000139','100000149','100000150','100000161','100000162','100000170','100000171','100000185','100000186','100000187','100000188','100000195','100000202','100000203','100000214','100000243','100000244','100000294','100000307','100000308','100000310','100000311','100000312','100000313','100000329','100000330','100000331','100000332','100000333','100000334','100000335','100000336','100000341','100000342','100000343','100000344','100000345','100000347','100000348','100000349','100000350','100000352','100000361','100000460','100000480','100000481','100000488','100000492','100000510','100000512','100000514','100000515','100000516','100000517','100000518','100000519','100000544','100000545','100000555','100000556','100000560','100000562','100000563','100000565','100000574','100000579','100000581','100000585','100000586','100000587','100000601','100000604','100000605','100000610','100000613','100000615','100000619','100000620','100000622','100000624','100000625','100000633','100000638','100000641','100000642','100000643','100000655','100000659','100000660','100000677','100000678','100000694','100000721','100000723','100000726','100000730','100000732','100000738','100000739','100000748','100000754','100000766','100000767','100000768','100000771','100000773','100000774','100000775','100000777','100000780','100000781','100000792','100000798','100000799','100000800','100000803','100000804','100000805','100000806','100000807','100000809','100000810','100000812','100000815','100000816','100000818','100000819','100000820','100000821','100000824','100000825','100000826','100000830','100000831','100000832','100000834','100000836','100000845','100000847','100000857','100000862','100000864','100000865','100000867','100000868','100000869','100000871','100000872','100000873','100000874','100000876','100000877','100000878','100000881','100000882','100000883','100000884','100000898','100000900','100000901','100000902','100000903','100000905','100000906','100000914','100000915','100000922','100000944','100000946','100000951','100000957','100000960','100000961','100000962','100000963','100000964','100000966','100000975','100000976','100000983','100000989','100000999','100001010','100001012','100001027','100001028','100001032','100001033','100001037','100001041','100001042','100001043','100001044','100001048','100001049','100001052','100001053','100001055','100001062','100001065','100001066','100001067','100001068','100001069','100001081','100001082','100001088','100001089','100001093','100001098'"
iOS_OSV=
Goal="'BUY','CLICK','DOWNLOAD','REGISTER'"
Algorithm="'SGD'"
"""


def mock_file(content):
    for line in map(lambda s: s + '\n', content.split('\n')):
        yield line


def test_load_from_stream_without_lowercase():
    params = _from_stream(mock_file(PARAMS_DUMMY_CONTENT), lower_values=False)
    assert_equals(params["From_Date"], '20170501')
    assert_equals(params["To_Date"], '20170607')
    assert_equals(params["Exchange"], ['Rubicon'])
    assert_equals(len(params["Campaign"]), 250)
    assert_equals('100000018' in params["Campaign"], True)
    assert_is_none(params["iOS_OSV"])
    assert_equals(params["Goal"], ['BUY', 'CLICK', 'DOWNLOAD', 'REGISTER'])
    assert_equals(params["Algorithm"], ['SGD'])


def test_load_from_stream_with_lowercase():
    params = _from_stream(mock_file(PARAMS_DUMMY_CONTENT), lower_values=True)
    assert_equals(params["From_Date"], '20170501')
    assert_equals(params["To_Date"], '20170607')
    assert_equals(params["Exchange"], ['rubicon'])
    assert_equals(len(params["Campaign"]), 250)
    assert_equals('100000018' in params["Campaign"], True)
    assert_is_none(params["iOS_OSV"])
    assert_equals(params["Goal"], ['buy', 'click', 'download', 'register'])
    assert_equals(params["Algorithm"], ['sgd'])
